- name: Create Device in Cisco FMC
  hosts: webservers
  connection: httpapi
  become: false
  gather_facts: no
  vars:
    credentials: "adminapi:Ad+in123"
    fmc_host: 150.1.7.242
    domain_id: e276abec-e0f2-11e3-8169-6d9ed49b625f
    token: 795a3714-0966-4b58-937c-1121fc665b56
    device_name: FTD
    device_host_name: 150.1.7.241
    device_reg_key: cisco
    access_policy_name: "{{ hostvars[inventory_hostname]['access_policy_name'] }}"
  tasks:
    - name: Get Access Control Policy ID
      uri:
        url: "https://{{ fmc_host }}/api/fmc_config/v1/domain/{{ domain_id }}/policy/accesspolicies"
        method: GET
        validate_certs: no
        headers:
          Authorization: "Basic {{ credentials | b64encode }}"
          X-auth-access-token: "{{ token }}"
      register: access_policies

    - name: Find Access Policy ID
      set_fact:
        access_policy_id: "{{ item.id }}"
      loop: "{{ access_policies.json['items'] }}"
      when: item.name == access_policy_name

    - name: Create Device
      uri:
        url: "https://{{ fmc_host }}/api/fmc_config/v1/domain/{{ domain_id }}/devices/devicerecords"
        method: POST
        validate_certs: no
        headers:
          Authorization: "Basic {{ credentials | b64encode }}"
          X-auth-access-token: "{{ token }}"
          Content-Type: "application/json"
        body: |
          {
            "name": "{{ device_name }}",
            "hostName": "{{ device_host_name }}",
            "regKey": "{{ device_reg_key }}",
            "type": "Device",
            "accessPolicy": {
              "id": "{{ access_policy_id }}",
              "type": "AccessPolicy"
            }
          }
      register: device_result

    - name: Display Result
      debug:
        var: device_result.json
